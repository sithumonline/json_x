name: Release Pipeline

on:
  push:
    tags:
      - v*
    branches:
      - main

permissions:
  contents: write

jobs:
  # release-windows:
  #   name: Build and release for Windows
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         update: true
  #         install: >-
  #           git
  #           make
  #           mingw-w64-x86_64-gcc
  #           mingw-w64-x86_64-glfw
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Set commit hash
  #       run: |
  #         echo "SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
  #     - name: Build and compile
  #       run: |
  #         cd src && make
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: json_x_glfw_opengl3-windows-amd64_${{ env.SHA_SHORT }}
  #         path: src\json_x_glfw_opengl3-windows-amd64_${{ env.SHA_SHORT }}.exe

  # release-macos:
  #   name: Build and release for MacOS
  #   runs-on: macos-14
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Install Glfw3
  #       run: |
  #         brew install glfw
  #     - name: Set commit hash
  #       run: |
  #         echo "SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
  #     - name: Build and compile
  #       run: |
  #         cd src && make
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: json_x_glfw_opengl3-macos-arm64_${{ env.SHA_SHORT }}
  #         path: src/json_x_glfw_opengl3-macos-arm64_${{ env.SHA_SHORT }}

  release-linux:
    name: Build and release for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Glfw3
        run: |
          sudo apt-get update
          sudo apt-get install libglfw3-dev
      - name: Set commit hash
        run: |
          echo "SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Build and compile
        run: |
          cd src && make
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: json_x_glfw_opengl3-linux-amd64_${{ env.SHA_SHORT }}
          path: src/json_x_glfw_opengl3-linux-amd64_${{ env.SHA_SHORT }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: src/json_x_glfw_opengl3-linux-amd64_${{ env.SHA_SHORT }}
          asset_name: json_x_glfw_opengl3-linux-amd64_${{ env.SHA_SHORT }}
          tag: ${{ github.ref }}

  web-build:
    name: Web page build
    needs: [release-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to web branch
        uses: actions/checkout@v2
        with:
          ref: web
      - name: Compile HTML
        run: |
          echo "LINUX-DOWNLOAD-HREF=https://github.com/sithumonline/json_x/releases/download/${{ github.ref }}/json_x_glfw_opengl3-linux-amd64_${{ env.SHA_SHORT }}" >> "$GITHUB_ENV"
          sed -e "s/linux-download-href/${{ env.LINUX-DOWNLOAD-HREF }}/g" index.html.tmp > index.html
          cat index.html
